name: Deploy DCS to Docker

on:
  push:
    branches:
      - main
      - release/dcs/v*
    tags:
      - v*-dcs
  release:
    types: [published]

jobs:
  deploy-docker:
    name: Build & Deploy DCS to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: ${{ env.RELATIVE_GITEA_ROOT }}
          fetch-depth: 0
          lfs: true

      - uses: actions/setup-go@v2
        with:
          go-version: '^1.17.7' # The Go version to download (if necessary) and use.
      
      - run: go version

      - name: Prepare Variables
        id: vars
        shell: bash
        run: |
          DOCKER_IMAGE=unfoldingword/dcs
          DOCKER_PLATFORMS=linux/amd64,linux/arm64
          REF=`echo ${GITHUB_REF} | cut -d "/" -f3-`
          echo "REF=${REF}"
          VERSION=${REF}
          # Be default, we use the branch or tag name as the Docker tag
          DOCKER_TAGS="${DOCKER_IMAGE}:${REF//\//-}"
          if [[ "${REF}" == "v"*"-dcs" ]]; then
            # REF is a tag so we create tags for patch, minor and major versions and is the latest production
            VERSION=${REF#v}
            PATCH_VERSION=${REF#v}
            PATCH_VERSION=${PATCH_VERSION%-dcs}
            MINOR_VERSION=`echo ${PATCH_VERSION} | cut -f1,2 -d'.'`
            MAJOR_VERSION=`echo ${MINOR_VERSION} | cut -f1 -d'.'`
            DOCKER_TAGS="${DOCKER_TAGS},${DOCKER_IMAGE}:latest,${DOCKER_IMAGE}:${MAJOR_VERSION},${DOCKER_IMAGE}:${MINOR_VERSION},${DOCKER_IMAGE}:${PATCH_VERSION}"
          elif [[ "${REF}" == "release/dcs/"* ]]; then
            # REF is a release branch so is a beta, qa or latest of this minor version
            DOCKER_TAGS="${DOCKER_TAGS},${DOCKER_IMAGE}:latest-qa"
          fi
          echo "SETTING DOCKER_TAGS: ${DOCKER_TAGS}"
          echo "DOCKER_TAGS=${DOCKER_TAGS}" >> $GITHUB_ENV
          echo ::set-output name=tags::${DOCKER_TAGS}

      - name: Debug
        shell: bash
        run: |
          echo "GITHUB_REF:" ${GITHUB_REF}
          echo "DOCKER_TAGS:" ${{ env.DOCKER_TAGS }}
          echo "steps.vars.outputs.tags:" ${{ steps.vars.outputs.tags }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.vars.outputs.tags }}