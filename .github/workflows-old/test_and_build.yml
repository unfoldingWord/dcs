# name: DCS Tests
# 
# on:
# # Commented out in favor of all testing done on pull requests, not pushes as already should be tested
# #  push:
# #    branches:
# #      - master
# #      - develop
# #      - release-*
# #      - sandbox-*
# #  pull_request:
# #    branches:
# #      - master
# #      - develop
# #      - release-*
#   push:
#     branches:
#       - '!master'
#       - '!release/dcs/v*'
#   pull_request:
#     branches:
#       - '**'
# 
# jobs:
#   compliance:
#     name: Test DCS Compliance
#     runs-on: ubuntu-latest
#     env:
#       GOPATH: /home/runner/work/dcs/dcs/go
#       RELATIVE_GITEA_ROOT: go/src/code.gitea.io/gitea
#       GITEA_ROOT: /home/runner/work/dcs/dcs/go/src/code.gitea.io/gitea
# 
#     steps:
#       - name: Set up Go 1.17
#         uses: actions/setup-go@v2
#         with:
#           go-version: '^1.17.7'
#         id: go
# 
#       - name: Checkout
#         uses: actions/checkout@v2
#         with:
#           path: ${{ env.RELATIVE_GITEA_ROOT }}
#           fetch-depth: 0
#           lfs: true
# 
#       - name: Debug - pre-build
#         shell: bash
#         run: |
#           pwd
#           go version
#           ls -l ${GOPATH}
#           ls -l ${GITEA_ROOT}
# 
#       - name: Setup node
#         if: always()
#         uses: actions/setup-node@v2
#         with:
#           node-version: '16'
# 
#       - name: deps-frontend
#         shell: bash
#         run: make node_modules
#         working-directory: ${{ env.GITEA_ROOT }}
# 
#       - name: lint-frontend
#         shell: bash
#         run: make lint-frontend
#         working-directory: ${{ env.GITEA_ROOT }}
# 
#       - name: lint-backend
#         shell: bash
#         run: make lint-backend
#         working-directory: ${{ env.GITEA_ROOT }}
#         env:
#           GOPROXY: https://goproxy.cn # proxy.golang.org is blocked in China, this proxy is not
#           GOSUMDB: sum.golang.org
#           TAGS: bindata sqlite sqlite_unlock_notify sqlite_json
# 
#       - name: checks-frontend
#         run: make checks-frontend
#         working-directory: ${{ env.GITEA_ROOT }}
# 
#       - name: checks-backend
#         run: make checks-backend
#         working-directory: ${{ env.GITEA_ROOT }}
# 
#       - name: build-frontend
#         shell: bash
#         run: make frontend
#         working-directory: ${{ env.GITEA_ROOT }}
# 
#       - name: build-backend-no-gcc
#         run: go build -o gitea_no_gcc # test if build succeeds without the sqlite tag
#         working-directory: ${{ env.GITEA_ROOT }}
#         env:
#           GO111MODULE: on
#           GOPROXY: https://goproxy.cn
# 
#       - name: build-backend-arm64
#         run: |
#           make backend # test cross compile
#           rm ./gitea # clean
#         working-directory: ${{ env.GITEA_ROOT }}
#         env:
#           GO111MODULE: on
#           GOPROXY: https://goproxy.cn
#           GOOS: linux
#           GOARCH: arm64
#           TAGS: bindata gogit
# 
#       - name: build-backend-386
#         run: go build -o gitea_linux_386 # test if compatible with 32 bit
#         working-directory: ${{ env.GITEA_ROOT }}
#         env:
#           GO111MODULE: on
#           GOPROXY: https://goproxy.cn
#           GOOS: linux
#           GOARCH: 386
# 
#   test:
#     name: DCS Unit & Integration Tests
#     runs-on: ubuntu-latest
# 
# #    services:
# #      mysql:
# #        image: mysql:5.7
# #        env:
# #          MYSQL_ROOT_PASSWORD: password
# #          MYSQL_ALLOW_EMPTY_PASSWORD: yes
# #          MYSQL_DATABASE: testgitea
# #        ports:
# #          - 3306
# #        options: --health-cmd "mysqladmin ping" --health-interval 10s --health-timeout 5s --health-retries 10
# 
#     env:
#       GOPATH: /home/runner/work/dcs/dcs/go
#       RELATIVE_GITEA_ROOT: go/src/code.gitea.io/gitea
#       GITEA_ROOT: /home/runner/work/dcs/dcs/go/src/code.gitea.io/gitea
#       GOPROXY: off
#       GOSUMDB: sum.golang.org
#       TAGS: bindata sqlite sqlite_unlock_notify
#       TEST_LDAP: 0
# 
#     steps:
#       - name: Set up Go 1.14
#         uses: actions/setup-go@v2
#         with:
#           go-version: '^1.14.5'
#         id: go
# 
#       - name: Checkout
#         uses: actions/checkout@v2
#         with:
#           path: ${{ env.RELATIVE_GITEA_ROOT }}
#           fetch-depth: 0
#           lfs: true
# 
#       - name: Debug - pre-build
#         shell: bash
#         run: |
#           pwd
#           go version
#           ls -l ${GOPATH}
#           ls -l ${GITEA_ROOT}
#           echo GITHUB_SHA: ${GITHUB_SHA}
# 
#       - name: Setup node
#         if: always()
#         uses: actions/setup-node@v1
#         with:
#           node-version: 12.x
# 
#       - name: Fetch tags
#         shell: bash
#         run: git fetch --tags --force
#         working-directory: ${{ env.GITEA_ROOT }}
# 
#       - name: build
#         run: make backend
#         working-directory: ${{ env.GITEA_ROOT }}
#         env:
#           GOPROXY: https://goproxy.cn # proxy.golang.org is blocked in China, this proxy is not
#           GOSUMDB: sum.golang.org
#           TAGS: bindata sqlite sqlite_unlock_notify
# 
#       - name: tag-pre-condition
#         run: git update-ref refs/heads/tag_test ${GITHUB_SHA}
#         working-directory: ${{ env.GITEA_ROOT }}
# 
#       - name: Make css and js with node
#         shell: bash
#         run: make webpack
#         working-directory: ${{ env.GITEA_ROOT }}
# 
#       - name: Build gitea binary
#         shell: bash
#         run: make build
#         working-directory: ${{ env.GITEA_ROOT }}
# 
#       - name: Debug - post-build
#         shell: bash
#         run: ls -l
#         working-directory: ${{ env.GITEA_ROOT }}
# 
#       - name: unit-test
#         run: make unit-test-coverage test-check
#         working-directory: ${{ env.GITEA_ROOT }}
#         env:
#           GOPROXY: off
#           TAGS: bindata sqlite sqlite_unlock_notify
# 
#       - name: test-sqlite
#         shell: bash
#         run: |
#           sudo curl -s "https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh" | sudo os=ubuntu dist=trusty bash
#           sudo apt-get install -y git-lfs
#           timeout -s ABRT 40m make test-sqlite-migration test-sqlite
#         working-directory: ${{ env.GITEA_ROOT }}
#         env:
#           GOPROXY: https://goproxy.cn
#           TAGS: bindata gogit sqlite sqlite_unlock_notify sqlite_json
#           RACE_ENABLED: true
#           TEST_TAGS: gogit sqlite sqlite_unlock_notify sqlite_json
#           USE_REPO_TEST_DIR: 1
# 
# #      - name: Start MySQL
# #        shell: bash
# #        run: |
# #          sudo /etc/init.d/mysql start
# #          mysqladmin -u root -proot password ''
# #          mysql -u root -e 'show databases;'
# #
# #      - name: test-mysql
# #        shell: bash
# #        run: |
# #          sudo apt-get install -y git-lfs
# #          sudo apt-get install -y curl
# #          sudo apt-get install -y bash
# #          sudo echo "127.0.0.1  mysql" | sudo tee -a /etc/hosts
# #          sudo curl -s "https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh" | sudo os=ubuntu dist=trusty bash
# #          make test-mysql-migration integration-test-coverage
# #        working-directory: ${{ env.GITEA_ROOT }}
# #        env:
# #          GOPROXY: https://goproxy.cn
# #          TAGS: bindata
# #          TEST_LDAP: 1
# #          USE_REPO_TEST_DIR: 1
